{
  "name": "Android.messagevalidate",
  "tagline": "Android短信验证",
  "body": "####本文介绍如何使用Android短信验证进行注册和登录，这里使用mob移动开发者服务平台。\r\n使用mob做短信验证的步骤：\r\n#####1.到mob官网新建应用，得到AppKey和AppSecret\r\n#####2.下载SDK\r\n#####3.导入SDK\r\n#####4.使用SMSSDK\r\n前三步这里不展开，官网说的很清楚 http://wiki.mob.com/android-短信sdk集成文档/\r\n####这里主要讲如何使用SMSSDK短信验证进行注册和登录。\r\nDemo中用到的常量：            \r\n```\r\npublic class Const {\r\n    final static String APPKEY=\"上面建的应用程序的AppKey\";\r\n    final static String APPSECRET=\"上面建的应用程序的AppSecret\";\r\n    final static String CHINA=\"86\";\r\n}\r\n```\r\n##一. 使用SMSSDKGUI进行短信验证注册\r\n布局文件只有一个按钮，就不展示代码了。\r\n先在manifest中加入相关权限：\r\n```\r\n<uses-permission android:name=\"android.permission.READ_CONTACTS\" />\r\n<uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\r\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n<uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n<uses-permission android:name=\"android.permission.INTERNET\" />\r\n<uses-permission android:name=\"android.permission.RECEIVE_SMS\" />\r\n<uses-permission android:name=\"android.permission.READ_SMS\" />\r\n<uses-permission android:name=\"android.permission.GET_TASKS\" />\r\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n```\r\n还要加入一个Activity，是SDK中封装好的，用来进行短信验证：\r\n```\r\n<activity\r\n    android:name=\"com.mob.tools.MobUIShell\"\r\n    android:theme=\"@android:style/Theme.Translucent.NoTitleBar\"\r\n    android:configChanges=\"keyboardHidden|orientation|screenSize\"\r\n    android:windowSoftInputMode=\"stateHidden|adjustResize\"/>\r\n```\r\n接下来在onCreate方法中加入以下代码：\r\n```\r\n//初始化\r\nSMSSDK.initSDK(this, Const.APPKEY, Const.APPSECRET);\r\nButton button=(Button)findViewById(R.id.button);\r\nbutton.setOnClickListener(new View.OnClickListener() {\r\n    @Override\r\n    public void onClick(View v) {\r\n        //注册手机号\r\n        RegisterPage registerPage=new RegisterPage();\r\n        //注册回调事件\r\n        registerPage.setRegisterCallback(new EventHandler(){\r\n            //事件完成后调用\r\n            @Override\r\n            public void afterEvent(int event, int result, Object data) {\r\n            //判断是否验证成功\r\n            if (result==SMSSDK.RESULT_COMPLETE){\r\n                //获取数据data\r\n                HashMap<String,Object> map=(HashMap<String,Object>)data;\r\n                //国家信息\r\n                String country=(String)map.get(\"country\");\r\n                //手机号信息\r\n                String phone=(String)map.get(\"phone\");\r\n                submitUserInfo(country,phone);  //提交用户信息\r\n            }\r\n            }\r\n        });\r\n        //显示注册界面\r\n        registerPage.show(MainActivity.this);\r\n    }\r\n});\r\n```\r\n下面是submitUserInfo具体实现：\r\n```\r\npublic void submitUserInfo(String country,String phone){\r\n    Random random=new Random();\r\n    String uid=Math.abs(random.nextInt())+\"\";\r\n    String nickName=\"test\";\r\n    SMSSDK.submitUserInfo(uid,nickName,null,country,phone);\r\n}\r\n```\r\n通过调用submitUserInfo方法向我们的服务器提交用户资料，提交的资料将当作“通信录好友”功能的建议资料。\r\n现在短信验证注册的功能已经实现了，用的是SDK的GUI界面。\r\n\r\n##二. 无GUI接口调用实现短信验证登录\r\n这里用到两个Activity，一个输入手机号获取验证码，一个用来提交验证码登录。两个Activity的布局文件都是一个EditView和一个Button。\r\n第一个Activity：\r\n```\r\npublic class MyRegisterActivity extends AppCompatActivity {\r\n    String phone;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.register);\r\n        //初始化\r\n        SMSSDK.initSDK(this, Const.APPKEY, Const.APPSECRET);\r\n        EventHandler eh=new EventHandler(){\r\n            @Override\r\n            public void afterEvent(int event, int result, Object data) {\r\n            if (result == SMSSDK.RESULT_COMPLETE) {\r\n                //回调完成\r\n                if (event == SMSSDK.EVENT_SUBMIT_VERIFICATION_CODE) {\r\n                    //提交验证码成功\r\n                }else if (event == SMSSDK.EVENT_GET_VERIFICATION_CODE){\r\n                    //获取验证码成功\r\n                    //开启另一个Activity（输入验证码）\r\n                    Intent intent=new Intent(MyRegisterActivity.this,ValidateActivity.class);\r\n                    intent.putExtra(\"phone\",phone); //  提交验证码需要手机号\r\n                    startActivity(intent);\r\n                }else if (event ==SMSSDK.EVENT_GET_SUPPORTED_COUNTRIES){\r\n                    //返回支持发送验证码的国家列表\r\n                }\r\n            }else{\r\n                try {\r\n                    JSONObject a = new JSONObject(((Throwable)data).getMessage());\r\n                    System.out.println(a.get(\"detail\"));\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                ((Throwable)data).printStackTrace();\r\n            }\r\n            }\r\n        };\r\n        SMSSDK.registerEventHandler(eh); //注册短信回调\r\n        Button button=(Button)findViewById(R.id.button);\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n            phone=((EditText)findViewById(R.id.text_phone)).getText().toString();\r\n            SMSSDK.getVerificationCode(Const.CHINA,phone);  //获取验证码\r\n            }\r\n        });\r\n    }\r\n}\r\n```\r\n第二个Activity：\r\n```\r\npublic class ValidateActivity extends AppCompatActivity {\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.validate);\r\n        Intent intent=getIntent();\r\n        final String phone=intent.getStringExtra(\"phone\");\r\n        //初始化\r\n        SMSSDK.initSDK(this, Const.APPKEY, Const.APPSECRET);\r\n        EventHandler eh=new EventHandler(){\r\n            @Override\r\n            public void afterEvent(int event, int result, Object data) {\r\n            if (result == SMSSDK.RESULT_COMPLETE) {\r\n                //回调完成\r\n                if (event == SMSSDK.EVENT_SUBMIT_VERIFICATION_CODE) {\r\n                    //提交验证码成功\r\n                    //TODO 在这里做登录操作\r\n                    System.out.println(\"------------success\");\r\n                }\r\n            }else{\r\n                try {\r\n                    //获取错误信息\r\n                    JSONObject a = new JSONObject(((Throwable)data).getMessage());\r\n                    String information=a.get(\"detail\").toString();\r\n                    System.out.println(information);\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                ((Throwable)data).printStackTrace();\r\n            }\r\n            }\r\n        };\r\n        SMSSDK.registerEventHandler(eh); //注册短信回调\r\n        Button button=(Button)findViewById(R.id.button);\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String validation=((EditText)findViewById(R.id.text_validate)).getText().toString();\r\n                SMSSDK.submitVerificationCode(Const.CHINA,phone,validation);    //提交验证码\r\n            }\r\n        });\r\n    }\r\n}\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}